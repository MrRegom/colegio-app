# Generated by Django 5.2.5 on 2025-09-10 14:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Unidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre único de la unidad.', max_length=255, unique=True)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('inactiva', 'Inactiva')], default='activa', help_text='Estado lógico de la unidad: activa o inactiva.', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha/hora de creación del registro.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha/hora de última actualización.')),
            ],
            options={
                'verbose_name': 'Unidad',
                'verbose_name_plural': 'Unidades',
                'db_table': 'unidad',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='UsuarioSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombres', models.CharField(blank=True, help_text='Nombres del usuario.', max_length=255)),
                ('apellidos', models.CharField(blank=True, help_text='Apellidos del usuario.', max_length=255)),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('usuario', 'Usuario')], default='usuario', help_text='Rol de acceso: admin o usuario.', max_length=10)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo')], default='activo', help_text='Estado de la cuenta: activo o inactivo.', max_length=10)),
                ('email', models.EmailField(help_text='Correo del usuario (único).', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha/hora de creación.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha/hora de última actualización.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('unidad', models.ForeignKey(help_text='FK a unidad; determina visibilidad de listas y envíos.', on_delete=django.db.models.deletion.RESTRICT, to='accounts.unidad')),
            ],
            options={
                'verbose_name': 'Usuario del Sistema',
                'verbose_name_plural': 'Usuarios del Sistema',
                'db_table': 'usuario_sistema',
                'ordering': ['username'],
                'permissions': [('can_manage_unit_users', 'Puede gestionar usuarios de su unidad'), ('can_view_unit_reports', 'Puede ver reportes de su unidad'), ('can_create_mass_emails', 'Puede crear envíos masivos de correo'), ('can_manage_email_lists', 'Puede gestionar listas de correo'), ('can_view_email_analytics', 'Puede ver analíticas de envíos'), ('can_manage_email_templates', 'Puede gestionar plantillas de correo')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LogAuditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(help_text='Tipo de acción ejecutada (LOGIN, CREAR_LISTA, etc.).', max_length=100)),
                ('entidad', models.CharField(help_text='Entidad afectada (tabla/objeto lógico).', max_length=100)),
                ('entidad_id', models.BigIntegerField(blank=True, help_text='Identificador de la entidad afectada.', null=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción legible para auditoría.')),
                ('valores_previos', models.JSONField(blank=True, help_text='Datos previos (JSON) antes del cambio.', null=True)),
                ('valores_nuevos', models.JSONField(blank=True, help_text='Datos nuevos (JSON) después del cambio.', null=True)),
                ('ip_usuario', models.GenericIPAddressField(blank=True, help_text='IP desde donde se ejecutó la acción.', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Agente de usuario (navegador/cliente).')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha/hora de registro del evento.')),
                ('usuario', models.ForeignKey(blank=True, help_text='Usuario que ejecutó la acción.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Auditoría',
                'verbose_name_plural': 'Logs de Auditoría',
                'db_table': 'log_auditoria',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['entidad', 'entidad_id'], name='idx_log_entidad'), models.Index(fields=['usuario', '-created_at'], name='idx_log_usuario')],
            },
        ),
    ]
